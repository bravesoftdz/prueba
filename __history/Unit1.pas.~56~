unit Unit1;

interface

uses
  Winapi.Windows, Winapi.Messages, System.SysUtils, System.Variants, System.Classes, Vcl.Graphics,
  Vcl.Controls, Vcl.Forms, Vcl.Dialogs, FireDAC.Stan.Intf, FireDAC.Stan.Option,
  FireDAC.Stan.Error, FireDAC.UI.Intf, FireDAC.Phys.Intf, FireDAC.Stan.Def,
  FireDAC.Stan.Pool, FireDAC.Stan.Async, FireDAC.Phys, FireDAC.Phys.MySQL,
  FireDAC.Stan.Param, FireDAC.DatS, FireDAC.DApt.Intf, FireDAC.DApt,
  FireDAC.Comp.Client, Data.DB, FireDAC.Comp.DataSet, Vcl.StdCtrls,
  FireDAC.VCLUI.Login, Vcl.Grids, Vcl.DBGrids, FireDAC.Comp.UI,
  FireDAC.VCLUI.Wait, Data.Bind.EngExt, Vcl.Bind.DBEngExt, Vcl.Bind.Grid,
  System.Rtti, System.Bindings.Outputs, Vcl.Bind.Editors, Vcl.DBCtrls,
  Data.Bind.Components, Data.Bind.Grid, Data.Bind.DBScope, Vcl.ComCtrls,
  Vcl.DBCGrids, Data.Bind.Controls, Vcl.ExtCtrls, Vcl.Buttons,
  Vcl.Bind.Navigator;

type
  TForm1 = class(TForm)
    FDConnection1: TFDConnection;
    FDQuery1: TFDQuery;
    Button1: TButton;
    Label1: TLabel;
    FDPhysMySQLDriverLink1: TFDPhysMySQLDriverLink;
    FDUpdateSQL1: TFDUpdateSQL;
    DataSource1: TDataSource;
    BindSourceDB1: TBindSourceDB;
    BindingsList1: TBindingsList;
    LinkFillControlToField: TLinkFillControlToField;
    LinkFillControlToField2: TLinkFillControlToField;
    ListView1: TListView;
    FDQuery2: TFDQuery;
    BindSourceDB2: TBindSourceDB;
    LinkListControlToField2: TLinkListControlToField;
    LinkPropertyToFieldCaption2: TLinkPropertyToField;
    StringGrid1: TStringGrid;
    BindNavigator1: TBindNavigator;
    Timer1: TTimer;
    Label2: TLabel;
    FDQuery2pta: TStringField;
    FDQuery2nombre: TStringField;
    FDQuery2telefono1: TIntegerField;
    FDQuery2telefono2: TIntegerField;
    FDQuery2telefono3: TIntegerField;
    FDQuery2mail: TStringField;
    FDQuery2id_cliente: TIntegerField;
    DBGrid1: TDBGrid;
    DataSource2: TDataSource;
    LinkGridToDataSourceBindSourceDB2: TLinkGridToDataSource;
    SpeedButton1: TSpeedButton;
    Label3: TLabel;
    ComboBox1: TComboBox;
    Edit1: TEdit;
    LinkFillControlToField3: TLinkFillControlToField;
    FDQuery3: TFDQuery;
    procedure Button1Click(Sender: TObject);
    procedure FDConnection1AfterConnect(Sender: TObject);
    procedure FormCreate(Sender: TObject);
    procedure Timer1Timer(Sender: TObject);
    procedure StringGrid1FixedCellClick(Sender: TObject; ACol, ARow: Integer);
    procedure ComboBox1KeyUp(Sender: TObject; var Key: Word;
      Shift: TShiftState);
    procedure Edit1KeyUp(Sender: TObject; var Key: Word; Shift: TShiftState);
  private
    { Private declarations }
  public
     ultcambio:TDateTime;
     procedure RefrescarDataSet(Modo:integer);
     function EstadoInsertEdit:boolean;
     procedure haycambios(var cambios:boolean; ultfecha:TDateTime);

    { Public declarations }
  end;

var
Form1:TForm1;

implementation

{$R *.dfm}

procedure TForm1.Button1Click(Sender: TObject);
begin
FDConnection1.Connected:=true;
end;

procedure TForm1.FDConnection1AfterConnect(Sender: TObject);
begin
label1.caption:='conectado';
end;

procedure TForm1.FormCreate(Sender: TObject);
var qry: TFDQuery;
begin
     qry:=TFDQuery.Create(Application);
     qry.Connection:=FDConnection1;
     qry.SQL.Clear;
     qry.SQL.Add('Select Max(fechahora) from cambios');
     qry.Open;
     //qry.ExecSQL;
     ultcambio:=qry.Fields[0].AsDateTime;
     qry.Close;
     qry.Destroy;
     label2.Caption:=DateToStr(ultcambio);
end;


procedure TForm1.haycambios(var cambios:boolean;ultfecha:TDateTime);
var qry: TFDQuery;
begin
     ultfecha:=ultcambio;
     qry:=TFDQuery.Create(Application);
     qry.Connection:=FDConnection1;
     qry.SQL.Clear;
     qry.SQL.Add('Select tabla,fechahora from cambios where fechahora > :ultcambio');
     qry.Params.ParamByName('ultcambio').AsDateTime:=ultcambio;
     qry.Params.ParamByName('ultcambio').ParamType:=ptInput;
     qry.Params.ParamByName('ultcambio').DataType:=ftDateTime;
     qry.Params.ParamByName('ultcambio').asDateTime:=ultcambio;
     qry.Open;
     cambios:=(qry.RecordCount > 0);
     if cambios then  ultfecha:= qry.Fields[1].AsDateTime;
     qry.Close;
     qry.destroy;

end;

procedure TForm1.Timer1Timer(Sender: TObject);
var  cambios:boolean;
begin
     haycambios(cambios,ultcambio);

     if cambios then
     begin
          timer1.enabled:=false;
          RefrescarDataSet(1);
     end;



end;

procedure TForm1.ComboBox1KeyUp(Sender: TObject; var Key: Word;
  Shift: TShiftState);
begin

  if (ord(key)=27) or (ord(key)=9) or (ord(key)=13) then (Sender as TCombobox).DroppedDown:=false
  else
  begin
  linkGridToDataSourceBindSourceDB2.Active:=false;
  linkFillControlToField3.Active:=false;
  if length((Sender as TComboBox).Text) > 0 then
  begin
    FDQuery2.Filter:='nombre like '+quotedStr((Sender as TComboBox).Text+'%');
    FDQuery2.Filtered:=true;
    Combobox1.DroppedDown:=true;
  end
  else
  FDQuery2.Filtered:=false;
  linkGridToDataSourceBindSourceDB2.Active:=true;
  ComboBox1.SelStart:=Length(ComboBox1.Text)-1;
  linkFillControlToField3.Active:=true;
  ComboBox1.SelLength:=1;
  end;
end;


procedure TForm1.Edit1KeyUp(Sender: TObject; var Key: Word; Shift: TShiftState);
begin
     linkGridToDataSourceBindSourceDB2.Active:=false;
      if length((Sender as TEdit).Text) > 0 then
      begin

        FDQuery2.Filter:='nombre like '+quotedStr((Sender as TEdit).Text+'%');
        FDQuery2.Filtered:=true;

end
else
FDQuery2.Filtered:=false;
linkGridToDataSourceBindSourceDB2.Active:=true;
end;

function TForm1.EstadoInsertEdit:boolean;
var i:integer; enestado:boolean;
begin
     i:=0;
     enestado:=false;
     while (i < FDConnection1.DataSetCount) and (not enestado) do
     begin
          if (FDConnection1.DataSets[i].State in [dsInsert,dsEdit]) then
          enestado:=true;
          i:=i+1;
     end;
     Result:=enestado;

end;

procedure TForm1.RefrescarDataSet(Modo:integer);
var i: integer;  cambios:boolean;
begin
     try
        i:=0;
     case Modo of
       0: begin
          while (i < FDConnection1.DataSetCount) do
          begin
              FDConnection1.DataSets[i].Refresh;
              i:=i+1;
          end;
          haycambios(cambios,ultcambio)
          end;


       1: begin
          if not EstadoInsertEdit then
          while (i < FDConnection1.DataSetCount) do
          begin
          FDConnection1.DataSets[i].Refresh;
          i:=i+1;
          end;
          end;
     end;
     finally
     timer1.Enabled:=true;
     end;
end;

procedure TForm1.StringGrid1FixedCellClick(Sender: TObject; ACol,
  ARow: Integer);
 var i:integer ;
begin
    FDQuery2.IndexFieldNames:=FDQuery2.Fields[Acol].FieldName;

    for i := 0 to ((Sender as TStringGrid).ColCount-1) do

    (Sender as TStringGrid).Cols[i].Clear;

         linkgridtodatasourcebindsourcedb2.Active:=false;
         linkgridtodatasourcebindsourcedb2.Active:=true;   // actualizar GRID

end;

end.
